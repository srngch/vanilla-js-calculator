(()=>{"use strict";var t={402:(t,n,e)=>{e.d(n,{Z:()=>i});var r=e(537),a=e.n(r),o=e(645),s=e.n(o)()(a());s.push([t.id,"div {\n\tbox-sizing: border-box;\n}\n\n#app {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-content: center;\n\tflex-wrap: wrap;\n\talign-items: center;\n}\n\n.display {\n\twidth: 20rem;\n\theight: 5rem;\n\tmargin-bottom: 0.1rem;\n\tpadding: 0.2rem;\n\tbackground: #4a4a4a;\n\tborder-radius: 10px;\n\tcolor: white;\n\tfont-family: monospace;\n\ttext-align: right;\n}\n\n.display-number {\n\tfont-size: 4.5rem;\n\tline-height: 1;\n}\n\n.display-number.big-number {\n\tfont-size: 2.8rem;\n\tline-height: 2;\n}\n\n.flicker {\n\tanimation: flickerAnimation 0.2s;\n\tanimation-timing-function: cubic-bezier(0.46, 0.03, 0.52, 0.96);\n}\n\n@keyframes flickerAnimation {\n\t0% {\n\t\topacity: 0;\n\t}\n\t20% {\n\t\topacity: 0;\n\t}\n\t21% {\n\t\topacity: 1;\n\t}\n}\n\nbutton {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\tflex: 1;\n\tdisplay: inline-block;\n\tborder: 1px solid white;\n\tborder-radius: 10px;\n\ttext-align: center;\n\ttext-decoration: none;\n\tcursor: pointer;\n}\n\nbutton:active {\n\tbox-shadow: inset 3px 3px 3px rgb(71 71 71 / 25%);\n\tborder: 1;\n}\n\n.btn-function {\n\tfont-size: 1.5rem;\n\tfont-weight: 600;\n\tbackground-color: #bbbbbb;\n}\n\n.btn-operator,\n.btn-result {\n\tbackground-color: #ffd978;\n}\n\n.btn-number,\n.btn-dot,\n.btn-operator,\n.btn-result {\n\tfont-size: 2.25rem;\n\tfont-weight: 500;\n}\n\n.btn-number[data-number='0'] {\n\tflex-basis: 50%;\n\tmax-width: 50%;\n}\n\n.controllers-row {\n\tdisplay: flex;\n\twidth: calc(5rem * 4);\n\theight: 5rem;\n\tjustify-content: space-between;\n}\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAAA;CACC,sBAAsB;AACvB;;AAEA;CACC,aAAa;CACb,sBAAsB;CACtB,uBAAuB;CACvB,qBAAqB;CACrB,eAAe;CACf,mBAAmB;AACpB;;AAEA;CACC,YAAY;CACZ,YAAY;CACZ,qBAAqB;CACrB,eAAe;CACf,mBAAmB;CACnB,mBAAmB;CACnB,YAAY;CACZ,sBAAsB;CACtB,iBAAiB;AAClB;;AAEA;CACC,iBAAiB;CACjB,cAAc;AACf;;AAEA;CACC,iBAAiB;CACjB,cAAc;AACf;;AAEA;CACC,gCAAgC;CAChC,+DAA+D;AAChE;;AAEA;CACC;EACC,UAAU;CACX;CACA;EACC,UAAU;CACX;CACA;EACC,UAAU;CACX;AACD;;AAEA;CACC,wBAAwB;CACxB,qBAAqB;CACrB,gBAAgB;CAChB,OAAO;CACP,qBAAqB;CACrB,uBAAuB;CACvB,mBAAmB;CACnB,kBAAkB;CAClB,qBAAqB;CACrB,eAAe;AAChB;;AAEA;CACC,iDAAiD;CACjD,SAAS;AACV;;AAEA;CACC,iBAAiB;CACjB,gBAAgB;CAChB,yBAAyB;AAC1B;;AAEA;;CAEC,yBAAyB;AAC1B;;AAEA;;;;CAIC,kBAAkB;CAClB,gBAAgB;AACjB;;AAEA;CACC,eAAe;CACf,cAAc;AACf;;AAEA;CACC,aAAa;CACb,qBAAqB;CACrB,YAAY;CACZ,8BAA8B;AAC/B",sourcesContent:["div {\n\tbox-sizing: border-box;\n}\n\n#app {\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-content: center;\n\tflex-wrap: wrap;\n\talign-items: center;\n}\n\n.display {\n\twidth: 20rem;\n\theight: 5rem;\n\tmargin-bottom: 0.1rem;\n\tpadding: 0.2rem;\n\tbackground: #4a4a4a;\n\tborder-radius: 10px;\n\tcolor: white;\n\tfont-family: monospace;\n\ttext-align: right;\n}\n\n.display-number {\n\tfont-size: 4.5rem;\n\tline-height: 1;\n}\n\n.display-number.big-number {\n\tfont-size: 2.8rem;\n\tline-height: 2;\n}\n\n.flicker {\n\tanimation: flickerAnimation 0.2s;\n\tanimation-timing-function: cubic-bezier(0.46, 0.03, 0.52, 0.96);\n}\n\n@keyframes flickerAnimation {\n\t0% {\n\t\topacity: 0;\n\t}\n\t20% {\n\t\topacity: 0;\n\t}\n\t21% {\n\t\topacity: 1;\n\t}\n}\n\nbutton {\n\t-webkit-appearance: none;\n\t-moz-appearance: none;\n\tappearance: none;\n\tflex: 1;\n\tdisplay: inline-block;\n\tborder: 1px solid white;\n\tborder-radius: 10px;\n\ttext-align: center;\n\ttext-decoration: none;\n\tcursor: pointer;\n}\n\nbutton:active {\n\tbox-shadow: inset 3px 3px 3px rgb(71 71 71 / 25%);\n\tborder: 1;\n}\n\n.btn-function {\n\tfont-size: 1.5rem;\n\tfont-weight: 600;\n\tbackground-color: #bbbbbb;\n}\n\n.btn-operator,\n.btn-result {\n\tbackground-color: #ffd978;\n}\n\n.btn-number,\n.btn-dot,\n.btn-operator,\n.btn-result {\n\tfont-size: 2.25rem;\n\tfont-weight: 500;\n}\n\n.btn-number[data-number='0'] {\n\tflex-basis: 50%;\n\tmax-width: 50%;\n}\n\n.controllers-row {\n\tdisplay: flex;\n\twidth: calc(5rem * 4);\n\theight: 5rem;\n\tjustify-content: space-between;\n}\n"],sourceRoot:""}]);const i=s},645:t=>{t.exports=function(t){var n=[];return n.toString=function(){return this.map((function(n){var e="",r=void 0!==n[5];return n[4]&&(e+="@supports (".concat(n[4],") {")),n[2]&&(e+="@media ".concat(n[2]," {")),r&&(e+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),e+=t(n),r&&(e+="}"),n[2]&&(e+="}"),n[4]&&(e+="}"),e})).join("")},n.i=function(t,e,r,a,o){"string"==typeof t&&(t=[[null,t,void 0]]);var s={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(s[c]=!0)}for(var l=0;l<t.length;l++){var d=[].concat(t[l]);r&&s[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),n.push(d))}},n}},537:t=>{t.exports=function(t){var n=t[1],e=t[3];if(!e)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */"),s=e.sources.map((function(t){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(t," */")}));return[n].concat(s).concat([o]).join("\n")}return[n].join("\n")}},379:t=>{var n=[];function e(t){for(var e=-1,r=0;r<n.length;r++)if(n[r].identifier===t){e=r;break}return e}function r(t,r){for(var o={},s=[],i=0;i<t.length;i++){var c=t[i],l=r.base?c[0]+r.base:c[0],d=o[l]||0,u="".concat(l," ").concat(d);o[l]=d+1;var p=e(u),b={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(b);else{var A=a(b,r);r.byIndex=i,n.splice(i,0,{identifier:u,updater:A,references:1})}s.push(u)}return s}function a(t,n){var e=n.domAPI(n);return e.update(t),function(n){if(n){if(n.css===t.css&&n.media===t.media&&n.sourceMap===t.sourceMap&&n.supports===t.supports&&n.layer===t.layer)return;e.update(t=n)}else e.remove()}}t.exports=function(t,a){var o=r(t=t||[],a=a||{});return function(t){t=t||[];for(var s=0;s<o.length;s++){var i=e(o[s]);n[i].references--}for(var c=r(t,a),l=0;l<o.length;l++){var d=e(o[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}o=c}}},569:t=>{var n={};t.exports=function(t,e){var r=function(t){if(void 0===n[t]){var e=document.querySelector(t);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(t){e=null}n[t]=e}return n[t]}(t);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:t=>{t.exports=function(t){var n=document.createElement("style");return t.setAttributes(n,t.attributes),t.insert(n,t.options),n}},565:(t,n,e)=>{t.exports=function(t){var n=e.nc;n&&t.setAttribute("nonce",n)}},795:t=>{t.exports=function(t){var n=t.insertStyleElement(t);return{update:function(e){!function(t,n,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var a=void 0!==e.layer;a&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,a&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var o=e.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,t,n.options)}(n,t,e)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(n)}}}},589:t=>{t.exports=function(t,n){if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}}},n={};function e(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return t[r](o,o.exports,e),o.exports}e.n=t=>{var n=t&&t.__esModule?()=>t.default:()=>t;return e.d(n,{a:n}),n},e.d=(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})},e.o=(t,n)=>Object.prototype.hasOwnProperty.call(t,n),(()=>{const t=class{constructor(t,n){this.target=t,this.props=n,this.setup(),this.setEvent(),this.render()}setup(){}template(){return""}mount(){}render(){this.target.innerHTML=this.template(),this.mount()}setState(t){this.state={...this.state,...t},this.render()}setEvent(){}addEvent(t,n,e){const r=[...this.target.querySelectorAll(n)];this.target.addEventListener(t,(t=>{if(a=t.target,!r.includes(a)&&!a.closest(n))return!1;var a;e(t)}))}},n=class extends t{template(){const{displayedNumber:t}=this.props;return`\n\t\t\t<span class="${t>999999?"display-number big-number":"display-number"}">${t.toLocaleString("ko-KR")}</span>\n\t\t`}},r=class extends t{template(){const{clearButtonText:t}=this.props;return`\n\t\t\t<div class="controllers">\n\t\t\t\t<div class="controllers-row">\n\t\t\t\t\t<button class="btn-function clear">${t}</button>\n\t\t\t\t\t<button class="btn-function sign">+/-</button>\n\t\t\t\t\t<button class="btn-function percent">%</button>\n\t\t\t\t\t<button class="btn-operator" data-operator="divide">รท</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="controllers-row">\n\t\t\t\t\t<button class="btn-number" data-number="7">7</button>\n\t\t\t\t\t<button class="btn-number" data-number="8">8</button>\n\t\t\t\t\t<button class="btn-number" data-number="9">9</button>\n\t\t\t\t\t<button class="btn-operator" data-operator="multiply">ร</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="controllers-row">\n\t\t\t\t\t<button class="btn-number" data-number="4">4</button>\n\t\t\t\t\t<button class="btn-number" data-number="5">5</button>\n\t\t\t\t\t<button class="btn-number" data-number="6">6</button>\n\t\t\t\t\t<button class="btn-operator" data-operator="minus">-</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="controllers-row">\n\t\t\t\t\t<button class="btn-number" data-number="1">1</button>\n\t\t\t\t\t<button class="btn-number" data-number="2">2</button>\n\t\t\t\t\t<button class="btn-number" data-number="3">3</button>\n\t\t\t\t<button class="btn-operator" data-operator="plus">+</button>\n\t\t\t\t</div>\n\t\t\t\t<div class="controllers-row">\n\t\t\t\t\t<button class="btn-number" data-number="0">0</button>\n\t\t\t\t\t<button class="btn-dot">.</button>\n\t\t\t\t\t<button class="btn-result" data-operator="equal">=</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`}setEvent(){const{handleClearButton:t,handleNumberButton:n,handleDotButton:e,handleOperatorButton:r,handleResultButton:a,toggleSignButton:o,handlePercentButton:s}=this.props;this.addEvent("click",".clear",(n=>{t(),this.#t()})),this.addEvent("click",".btn-number",(t=>{n(Number(t.target.dataset.number))})),this.addEvent("click",".btn-dot",(t=>{e()})),this.addEvent("click",".btn-operator",(t=>{r(t.target.dataset.operator),this.#t()})),this.addEvent("click",'[data-operator="equal"]',(t=>{a(),this.#t()})),this.addEvent("click",".sign",(t=>{o(),this.#t()})),this.addEvent("click",".percent",(t=>{s(),this.#t()}))}#t(){document.querySelector(".display-number").classList.add("flicker")}};var a=e(379),o=e.n(a),s=e(795),i=e.n(s),c=e(569),l=e.n(c),d=e(565),u=e.n(d),p=e(216),b=e.n(p),A=e(589),m=e.n(A),h=e(402),C={};C.styleTagTransform=m(),C.setAttributes=u(),C.insert=l().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=b(),o()(h.Z,C),h.Z&&h.Z.locals&&h.Z.locals,new class extends t{setup(){this.state={displayedNumber:0,firstOperand:null,secondOperand:null,recentOperand:0,operator:null,isDot:!1,clearButtonText:"AC"}}template(){return'\n      <header><h1>Calculator</h1></header>\n      <main>\n        <div data-component="display" class="display"></div>\n        <div data-component="controller"></div>\n      </main>\n      <footer>\n        <h5>Made with โ๏ธ by <a href="https://github.com/srngch">srngch</a></h5>\n      </footer>\n    '}mount(){const{displayNumber:t,handleNumberButton:e,handleDotButton:a,handleOperatorButton:o,handleResultButton:s,handleClearButton:i,toggleSignButton:c,handlePercentButton:l}=this,{displayedNumber:d,clearButtonText:u}=this.state,p=this.target.querySelector('[data-component="display"]'),b=this.target.querySelector('[data-component="controller"]');new n(p,{displayedNumber:d,displayNumber:t.bind(this)}),new r(b,{clearButtonText:u,handleClearButton:i.bind(this),toggleSignButton:c.bind(this),handlePercentButton:l.bind(this),handleNumberButton:e.bind(this),handleDotButton:a.bind(this),handleOperatorButton:o.bind(this),handleResultButton:s.bind(this)}),console.table(this.state)}setEvent(){document.addEventListener("keydown",(t=>{if((t=>{const n=["Escape","Enter","+","-","*","/","%",",","."].includes(t),e=Number.isInteger(Number(t))&&" "!==t;return!(n||e)})(t.key))return;const{handleClearButton:n,toggleSignButton:e,handlePercentButton:r,handleNumberButton:a,handleDotButton:o,handleOperatorButton:s,handleResultButton:i}=this;if(isNaN(t.key)){const a={"+":"plus","-":"minus","*":"multiply","/":"divide"};({Escape:n.bind(this),Enter:i.bind(this),"+":s.bind(this),"-":s.bind(this),"*":s.bind(this),"/":s.bind(this),"%":r.bind(this),",":e.bind(this),".":o.bind(this)})[t.key](a[t.key])}else a.bind(this)(Number(t.key))}))}displayNumber(t){this.setState({displayedNumber:t})}handleNumberButton(t){const{firstOperand:n,secondOperand:e,recentOperand:r,operator:a,isDot:o}=this.state,s=a&&null===e?0:r;console.log(s);const i=o?parseFloat(`${s}.${t}`):parseFloat(`${s}${t}`);i>=1e9||this.setState({displayedNumber:i,firstOperand:a?n:i,secondOperand:a?i:e,recentOperand:i,isDot:!1,clearButtonText:"C"})}handleDotButton(){const{isDot:t}=this.state;t||this.setState({displayedNumber:`${this.state.displayedNumber}.`,isDot:!0})}handleOperatorButton(t){const{firstOperand:n,secondOperand:e}=this.state;this.setState({operator:t,isDot:!1}),n&&e&&this.handleResultButton()}handleResultButton(){this.setState({displayedNumber:this.#n(),firstOperand:this.#n(),secondOperand:null})}#n(){const{firstOperand:t,secondOperand:n,recentOperand:e,operator:r}=this.state,a=t||0,o=n||e;let s=null;switch(r){case"plus":s=a+o;break;case"minus":s=a-o;break;case"multiply":s=a*o;break;case"divide":s=a/o;break;default:s=a}return s}handleClearButton(){let t;const{firstOperand:n,secondOperand:e,operator:r}=this.state;n&&r&&e?t={displayedNumber:0,secondOperand:null}:n&&r&&!e?t={operator:null}:!n||r||e||(t={displayedNumber:0,firstOperand:null}),this.setState({...t,recentOperand:0,isDot:!1,clearButtonText:"AC"})}toggleSignButton(){const{displayedNumber:t,firstOperand:n}=this.state;this.setState({firstOperand:n?-n:0,displayedNumber:0===t?0:-t})}handlePercentButton(){let t;const{displayedNumber:n,firstOperand:e,operator:r}=this.state;if(r)t={displayedNumber:n*e/100,secondOperand:n*n/100};else{const n=1*e/100;t={displayedNumber:n,firstOperand:n,recentOperand:n}}this.setState(t)}}(document.querySelector("#app"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,